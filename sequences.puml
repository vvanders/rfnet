@startuml
Node->Node: Start Operation

Node->Link: CONTROL: Request Link
Link->Node: CONTROL: Grant Link

Node->Link: DATA 0
Link->Node: ACK 0

note over Node, Link: Repeat until all data frames complete

Node->Link: DATA N
Link->Node: ACK N

Link->Internet: REST API or RF Raw packet
Internet-->Link: HTTP 200

Link->Node: ACK N (contains response)

Link-->Node: Data 0
Node-->Link: Ack 0

note over Node, Link: Repeat until all data frames complete

Link-->Node: Data N
Node-->Link: Ack N

Node->Node: Operation complete

Node->Link: Close
Link->Node: Closed

@enduml

@startuml

participant Node
participant RF

Link->RF: BROADCAST: 256LW,R,F,KI7EST-0

note over RF: Repeated every 5 minutes while link is idle
note over RF: . . .

Node->RF: CONTROL: Request Link KI7EST-1,KI7EST-0
RF->Link: CONTROL: Request Link KI7EST-1,KI7EST-0
Link->RF: CONTROL: Grant Link KI7EST-0,KI7EST-1
RF->Node: CONTROL: Grant Link KI7EST-0,KI7EST-1

note over RF: First frame has Start Flag set

Node->RF: DATA: 0x0001 256B,4F,S,_E <FEC> <payload> <FEC>
RF->Link: DATA: 0x0001 256B,4F,S,_E <FEC> <payload> <FEC>

Link->RF: ACK: 0x0001 0x0000, _N, _R, 0C, <FEC>
RF->Node: ACK: 0x0001 0x0000, _N, _R, 0C, <FEC>

note over RF: Repeat until all data frames are sent.\n\nNote that last frame has end flag set\n\nIf Link as response for command/packet then\n Response Flag will be set and second data transfer happens in reverse.

Node->RF: DATA: 0x0020 256B,4F,_S,E <FEC> <payload> <FEC>
RF->Link: DATA: 0x0020 256B,4F,_S,E <FEC> <payload> <FEC>

Link->Link: Final packet, assembled sequence
Link->Link: <sig> 0001 REST KI7EST@rfnethub.net \nPOST testdomain.com/ping
Link->Hub: /user/KI7EST/keys
Hub->Link: "MTIzNDU2NzgxMjM0NTY3ODEyMzQ1Njc4MTIzNDU2Nzg="
Link->Link: Verify signature
Link->testdomain.com: /ping
testdomain.com->Link: 200

Link->RF: ACK: 0x0001 0x0000, _N, R, 0C, <FEC>
RF->Node: ACK: 0x0001 0x0000, _N, R, 0C, <FEC>

Link->RF: DATA: 0x0001 256B,4F,S,E <FEC> \nKI7EST@rfnethub.net 0001 REST \n200
RF->Node: DATA: 0x0001 256B,4F,S,E <FEC> \nKI7EST@rfnethub.net 0001 REST \n200

Node->RF: ACK: 0x0001 0x0000,_N,_R,0C <FEC>
RF->Link: ACK: 0x0001 0x0000,_N,_R,0C <FEC>

Node->RF: CONTROL: Close Link KI7EST-1,KI7EST-0
RF->Link: CONTROL: Close Link KI7EST-1,KI7EST-0

Link->RF: CONTROL: Closed Link KI7EST-0,KI7EST-1
RF->Node: CONTROL: Closed Link KI7EST-0,KI7EST-1

@enduml